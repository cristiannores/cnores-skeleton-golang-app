// Code generated by MockGen. DO NOT EDIT.
// Source: helpers.go

// Package mock_helpers is a generated GoMock package.
package mock_helpers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHelperInterface is a mock of HelperInterface interface.
type MockHelperInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHelperInterfaceMockRecorder
}

// MockHelperInterfaceMockRecorder is the mock recorder for MockHelperInterface.
type MockHelperInterfaceMockRecorder struct {
	mock *MockHelperInterface
}

// NewMockHelperInterface creates a new mock instance.
func NewMockHelperInterface(ctrl *gomock.Controller) *MockHelperInterface {
	mock := &MockHelperInterface{ctrl: ctrl}
	mock.recorder = &MockHelperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHelperInterface) EXPECT() *MockHelperInterfaceMockRecorder {
	return m.recorder
}

// GetFileName mocks base method.
func (m *MockHelperInterface) GetFileName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFileName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetFileName indicates an expected call of GetFileName.
func (mr *MockHelperInterfaceMockRecorder) GetFileName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFileName", reflect.TypeOf((*MockHelperInterface)(nil).GetFileName))
}

// JsonParser mocks base method.
func (m *MockHelperInterface) JsonParser(data []byte, v interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "JsonParser", data, v)
	ret0, _ := ret[0].(error)
	return ret0
}

// JsonParser indicates an expected call of JsonParser.
func (mr *MockHelperInterfaceMockRecorder) JsonParser(data, v interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JsonParser", reflect.TypeOf((*MockHelperInterface)(nil).JsonParser), data, v)
}

// ValidateStruct mocks base method.
func (m *MockHelperInterface) ValidateStruct(o interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateStruct", o)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateStruct indicates an expected call of ValidateStruct.
func (mr *MockHelperInterfaceMockRecorder) ValidateStruct(o interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateStruct", reflect.TypeOf((*MockHelperInterface)(nil).ValidateStruct), o)
}
